name: CI/CD Pipeline

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}-${{ hashFiles('src/**/*.js', 'src/**/*.jsx', 'src/**/*.ts', 'src/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}-

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint (Optional - Non-blocking)
        run: npm run lint || true

      - name: Build the Project
        run: npm run build

  linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm 
            node_modules
          key: ${{ runner.os }}-linting-${{ hashFiles('next.config.mjs', '**/*.js', '**/package-lock.json') }}
          restore-keys: |
            linting-${{ runner.os }}-
            ${{ runner.os }}-

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint Fix
        run: npm run lint:fix || true

      - name: Run ESLint Check
        run: npm run lint || true

  testing:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-testing-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-testing-

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"

      - name: Install Dependencies
        run: npm ci

      - name: Run Vitest Tests
        run: npm test -- --coverage

      - name: Run Jest/DOM Tests
        run: npm test -- --coverage

      - name: Run Cypress Tests
        run: npx cypress run

  vercel-deploy:
    if: github.ref == 'refs/heads/main' # âœ… Only triggers on main branch
    runs-on: ubuntu-latest
    needs: [build, linting, testing]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Trigger Vercel Deployment
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          vercel --prod --token $VERCEL_TOKEN